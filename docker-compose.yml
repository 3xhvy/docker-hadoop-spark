services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - /home/hohoanghvy/IdeaProjects/hadoop-spark-project/input:/data/input
      - /home/hohoanghvy/IdeaProjects/hadoop-spark-project/output:/data/output
      - /home/hohoanghvy/IdeaProjects/hadoop-spark-project/target:/user/hadoop/target
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    env_file:
      - ./hadoop.env
    networks:
      - spark-network

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      - SERVICE_PRECONDITION=namenode:9870
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    ports:
      - 9864:9864
    env_file:
      - ./hadoop.env
    networks:
      - spark-network

  spark-master:
    build:
      context: ./spark-jupyter
      dockerfile: SparkDockerfile
    container_name: spark-master
    ports:
      - "7077:7077"
      - "8080:8080"
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./jars:/opt/spark/jars
    networks:
      - spark-network

  spark-worker-1:
    build:
      context: ./spark-jupyter
      dockerfile: SparkDockerfile
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=4G
      - SPARK_WORKER_CORES=2
    volumes:
      - ./jars:/opt/spark/jars
    networks:
      - spark-network

  jupyter:
    image: jupyter/pyspark-notebook:python-3.10
    container_name: jupyter
    ports:
      - 8888:8888
      - 4040:4040
      - 8080:8080
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - PYSPARK_PYTHON=python3
      - PYSPARK_DRIVER_PYTHON=jupyter
      - PYSPARK_DRIVER_PYTHON_OPTS=notebook
      - PYSPARK_SUBMIT_ARGS=--packages graphframes:graphframes:0.8.3-spark3.4-s_2.12 pyspark-shell
      - SPARK_WORKER_MEMORY=4G
      - SPARK_WORKER_CORES=2
    volumes:
      - /home/hohoanghvy/IdeaProjects/hadoop-spark-project/input:/data/input
      - /home/hohoanghvy/IdeaProjects/hadoop-spark-project/output:/data/output
      - /home/hohoanghvy/IdeaProjects/hadoop-spark-project/notebook:/home/jovyan/school-lab
      - /home/hohoanghvy/PycharmProjects/sarl-spark:/home/jovyan/sarl-spark
      - /home/hohoanghvy/docker_container/hadoop-spark/jupyter-config:/home/jovyan/.jupyter
      - ./jars:/opt/spark/jars
    deploy:
      resources:
        limits:
          memory: 16g # Hard limit for the container's total RAM
          cpus: '6'   # Hard limit for the container's total CPU cores (as string or float)
        reservations:
          memory: 8g  # Soft reservation, Docker tries to ensure this much is available
          cpus: '2'   # Soft reservation
    networks:
      - spark-network

volumes:
  hadoop_namenode:
  hadoop_datanode:

networks:
  spark-network:
